<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hydd&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-09-30T10:55:33.990Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>hydd</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有趣的题</title>
    <link href="http://example.com/2020/09/30/sol_2/"/>
    <id>http://example.com/2020/09/30/sol_2/</id>
    <published>2020-09-29T16:00:00.000Z</published>
    <updated>2020-09-30T10:55:33.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概率"><a href="#概率" class="headerlink" title="概率"></a>概率</h3><h4 id="problem-1"><a href="#problem-1" class="headerlink" title="problem 1"></a>problem 1</h4><p>一个圆中等概率随机选取 $4$ 个点，那么存在一条直径，使得点全在直径一侧的概率是？</p><p>解答参考：<a href="https://www.zhihu.com/question/339701586/answer/789026122">https://www.zhihu.com/question/339701586/answer/789026122</a></p><ul><li>不妨设没有两个点 $A,B$，使得 $O,A,B$ 三点共线。因为这样的概率$\rightarrow 0$。</li><li>定义点 $A$ 为 “最右点” 当且仅当剩下三个点的圆心角都在 $A$ 的圆心角+90°之内。</li><li>我们不妨来研究一下“最右点”和答案的关系。<ol><li>如果四个点处于同一半圆，当且仅当存在“最右点”。</li><li>“最右点”要么没有，要么只有一个，所以每个点是“最右点”是互斥的。</li><li>第一次、第二次选的点、第三次、第四次选的点，成为“最右点”的概率都是$\frac 18$，且它们互不影响。</li></ol></li><li>那么，概率为 $4\times \frac 18=\frac 12$。</li><li>这个问题可以推广到随机选取 $n$ 个点，概率为 $\frac n{2^{n-1}}$。</li></ul><h4 id="problem-2"><a href="#problem-2" class="headerlink" title="problem 2"></a>problem 2</h4><p>$S$ 是集合 $1,2,\cdots,2004$ 的子集，$S$ 中的任意两个数的差不等于 $4$ 或 $7$，问 $S$ 中最多含有多少个元素？</p><p>解答参考：<a href="https://wenku.baidu.com/view/e634ddcc69eae009581becc1.html">https://wenku.baidu.com/view/e634ddcc69eae009581becc1.html</a></p><ul><li>我们将任意连续 $11$ 个数排成一圈，如右图所示：<img src="/pic2.png" alt=""></li><li>显然，由题目条件，相邻的两个数不能同时选，那么最多只能选 $5$ 个数。即每 $11$ 个数至多只能选 $5$ 个数。又因为 $2004=182\times 11+2$，所以至多能选 $182\times 5+2=912$ 个数。</li><li>其次，令 $S=\{x|x=11k+t,k\in \mathcal{Z},t=1,2,4,7,10,1\leqslant x\leqslant 2004\}$ ，那么 $S$ 满足题目条件，且 $|S|=912$。故答案为 $912$。</li></ul><h3 id="有趣的题"><a href="#有趣的题" class="headerlink" title="有趣的题"></a>有趣的题</h3><h4 id="problem-1-1"><a href="#problem-1-1" class="headerlink" title="problem 1"></a>problem 1</h4><p>解答参考：<a href="https://www.bilibili.com/video/BV1UD4y1U7or">https://www.bilibili.com/video/BV1UD4y1U7or</a></p><p>有一个 $64$ 个格子的棋盘，每个格子上放着一个正面朝上或反面朝上的棋子。有一个格子下有硬币。</p><p>有两个人想得到这枚硬币。开始前，两人均不知道棋盘上每个棋子的正反，只知道是个 $8\times 8$ 的棋盘，但他们可以商量一个策略。</p><p>第一个人先可以看到棋盘上每个棋子的正反，同时裁判会告诉第一个人钥匙在哪个棋子的下面。然后这个人必须要翻转且仅翻转一枚棋子，然后离开。</p><p>然后，第二个人再看到棋盘，他只知道现在棋盘上每个棋子的正反，要说出硬币的位置。</p><p>问是否有固定策略。</p><ul><li>首先考虑只有 $2$ 个格子怎么做。不妨设 $0$ 为正面，$1$ 为反面。</li><li>对于第一个人，如果硬币在第一个位置，它要翻成 $0,0$ 或 $0,1$ 中的一种。如果在第二个位置，他要翻成 $1,0$ 或 $1,1$ 中的一种。可以发现，不管初始局面如何，第一个人都可以通过一步达到要求。</li><li>为什么呢，<img src="/pic.png" alt="">，因为每个点都可以通过走一条边到达一个红点和蓝点，点代表的是局面，颜色代表的是硬币的位置。</li><li>我们可以轻易得到 $3$ 个格子是无解的。$3$ 个格子相当于一个立方体，每个顶点有三条边，相邻的点分别为红、绿、蓝三种颜色，每个点最多影响 $3$ 个点的相邻点，所以至少有 $3$ 个红顶点，$3$ 个绿顶点，$3$ 个蓝顶点。而总共只有 $8$ 个顶点，所以不合法。发现只有当 $\frac{2^n}n\in\mathcal Z$ 合法，即 $n\mid 2^n$，也就是说 $n$ 为 $2$ 的次幂。</li><li>那么显然 $64$ 个格子是合法的。</li><li>那么具体策略是什么呢？</li><li>不妨将每个位置标号为 $0,1,2,\cdots,63$，设有硬币的格子为 $x$。将反面棋子的位置异或起来，记为 $y$。</li><li>将 $x\oplus y$ 翻转，那么硬币的位置为当前状态下反面棋子的位置的异或和。</li><li>为什么呢？因为 $y\oplus(x\oplus y)=x$，就做完了。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概率&quot;&gt;&lt;a href=&quot;#概率&quot; class=&quot;headerlink&quot; title=&quot;概率&quot;&gt;&lt;/a&gt;概率&lt;/h3&gt;&lt;h4 id=&quot;problem-1&quot;&gt;&lt;a href=&quot;#problem-1&quot; class=&quot;headerlink&quot; title=&quot;problem</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>城市</title>
    <link href="http://example.com/2020/09/24/sol_3/"/>
    <id>http://example.com/2020/09/24/sol_3/</id>
    <published>2020-09-23T16:00:00.000Z</published>
    <updated>2020-09-30T12:06:25.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="城市"><a href="#城市" class="headerlink" title="城市"></a>城市</h2><p>设答案乘 $n^i$ 后的值为 $ans_i$。则：</p><script type="math/tex; mode=display">\begin{align*}ans_i&=\sum_{i\texttt{次操作后得到的}\\\texttt{可重有序点集}S}\sum_{\texttt{连通块}P}[S\texttt{中的点都在}P\texttt{中}]\\&=\sum_{\texttt{连通块}P}\sum_{i\texttt{次操作后得到的}\\\texttt{可重有序点集}S}[S\texttt{中的点都在}P\texttt{中}]\\&=\sum_{\texttt{连通块}P}|P|^i\end{align*}</script><p>如果直接要求这个 $|P|^i$，要维护所有大小的连通块个数，而连通块大小可以达到 $O(n)$ 级别。</p><p>然后这里有个套路，将 $P^i$ 用斯特林数展开。展开公式：$x^k=\sum \limits_{i=1}^{x}S(k,i)C(x,i)i! $。（下界也可以从 $0$ 开始）</p><p>考虑证明：$x^k$ 可以理解为有 $x$ 个不同的盒子，把 $k$ 个不同的球放入盒子中的方案数，允许空盒。</p><p>现在把”允许空盒“转化成”不允许空盒“（所有盒子都至少放入一个球）</p><p>首先枚举非空的盒子个数，设为 $i$，那么存在 $k−i$ 个空盒。</p><p>选出这 $i$ 个不同的非空盒子有 $C(x,i)$ 种方案，将 $k$ 个不同的球放入 $i$ 个无序非空盒子有 $S(k,i)$ 种方案，现在这些盒子是有序的，再乘上 $i!$ 就是结果。</p><script type="math/tex; mode=display">\begin{align*}ans_i&=\sum_{\texttt{连通块}P}|P|^i\\&=\sum_{\texttt{连通块}P}\sum_{j=0}^iS(i,j)C(|P|,j)j!\\&=\sum_{j=0}^iS(i,j)j!\sum_{\texttt{连通块}P}C(|P|,j)\\\end{align*}</script><p>那么现在就要求 $\sum\limits_{\texttt{连通块}P}C(|P|,i),\forall 0\leqslant i\leqslant k$。</p><p><br/></p><p>考虑树形 $dp$，设 $dp[u][i]$ 表示以 $u$ 为根的所有连通块 $P$ 的 $C(|P|,i)$ 之和。</p><p>观察大小为 $a$ 的连通块和大小为 $b$ 的连通块合并后，现在的 $C(|P|,i)$ 的值和原来的值有什么关系，有$C(|a|+|b|,i)=\sum\limits_{j=0}^{|a|+|b|} C(|a|,j)C(|b|,|a|+|b|-j)$，可以直接背包合并（卷积），时间复杂度 $O(nk)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day2</span></span><br><span class="line"><span class="comment"> * Problem：city - T4</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/22</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,dp[<span class="number">200005</span>][<span class="number">105</span>],S[<span class="number">105</span>][<span class="number">105</span>],sz[<span class="number">200005</span>],f[<span class="number">200005</span>],tmp[<span class="number">200005</span>];</span><br><span class="line"><span class="keyword">int</span> edgenum,vet[<span class="number">400005</span>],Next[<span class="number">400005</span>],Head[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,ll a)</span></span>&#123;</span><br><span class="line">ll res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (a)&#123;</span><br><span class="line"><span class="keyword">if</span> (a&amp;<span class="number">1</span>) res=res*x%Mod;</span><br><span class="line">x=x*x%Mod; a&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">vet[++edgenum]=v;</span><br><span class="line">Next[edgenum]=Head[u];</span><br><span class="line">Head[u]=edgenum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">dp[u][<span class="number">0</span>]=<span class="number">1</span>; dp[u][<span class="number">1</span>]=<span class="number">1</span>; sz[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])</span><br><span class="line"><span class="keyword">if</span> (vet[e]!=fa)&#123;</span><br><span class="line">dfs(vet[e],u);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k&amp;&amp;i&lt;=sz[u]+sz[vet[e]];i++) tmp[i]=dp[u][i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k&amp;&amp;i&lt;=sz[u];i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;i+j&lt;=k&amp;&amp;j&lt;=sz[vet[e]];j++)</span><br><span class="line">tmp[i+j]=(tmp[i+j]+<span class="number">1l</span>l*dp[u][i]*dp[vet[e]][j])%Mod;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k&amp;&amp;i&lt;=sz[u]+sz[vet[e]];i++) dp[u][i]=tmp[i];</span><br><span class="line">sz[u]+=sz[vet[e]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k&amp;&amp;i&lt;=sz[u];i++) f[i]=(f[i]+dp[u][i])%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;city.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;city.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k); <span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">u=read(); v=read();</span><br><span class="line">addedge(u,v); addedge(v,u);</span><br><span class="line">&#125;</span><br><span class="line">S[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line">S[i][j]=(S[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1l</span>l*S[i<span class="number">-1</span>][j]*j)%Mod;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> invn=qpow(n,Mod<span class="number">-2</span>),tmp=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,mul=<span class="number">1</span>; tmp=<span class="number">1l</span>l*tmp*invn%Mod;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">mul=<span class="number">1l</span>l*mul*j%Mod;</span><br><span class="line">ans=(ans+<span class="number">1l</span>l*mul*S[i][j]%Mod*f[j])%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="number">1l</span>l*ans*tmp%Mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;城市&quot;&gt;&lt;a href=&quot;#城市&quot; class=&quot;headerlink&quot; title=&quot;城市&quot;&gt;&lt;/a&gt;城市&lt;/h2&gt;&lt;p&gt;设答案乘 $n^i$ 后的值为 $ans_i$。则：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
</summary>
      
    
    
    
    <category term="CSP-S模拟赛" scheme="http://example.com/categories/CSP-S%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    
    <category term="树形dp（期望）" scheme="http://example.com/tags/%E6%A0%91%E5%BD%A2dp%EF%BC%88%E6%9C%9F%E6%9C%9B%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>ckw的树</title>
    <link href="http://example.com/2020/09/24/sol_4/"/>
    <id>http://example.com/2020/09/24/sol_4/</id>
    <published>2020-09-23T16:00:00.000Z</published>
    <updated>2020-09-30T12:06:31.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ckw的树"><a href="#ckw的树" class="headerlink" title="ckw的树"></a>ckw的树</h2><p>设 $f[u]$ 表示从 $u$ 开始游走的期望时间。不妨设 $f[u]=a_uf[fa(fa(u))]+b_uf[fa(u)]+c_usum[fa(u)]+d_u$。</p><p>不妨设 $fa(1)=0,fa(0)=0$，$f[0]=0$。设 $t_u$ 为与 $u$ 距离不超过 $2$ 的点的个数。</p><p>若它的子树中每个点的 $f[v]$ 都可以用 $a_v,b_v,c_v,d_v$ 表示出来，考虑怎么将 $f[u]$ 用 $a_u,b_u,c_u,d_u$ 表示出来。</p><p>根据题意，每次可以从 $u$ 到距离不超过 $2$ 的任意一个节点，记 $sum[u]=\sum\limits_{v\in son(u)}f[v]$，那么满足：</p><ul><li>$t_uf[u]=f[fa(fa(u))]+f[fa(u)]+sum[fa(u)]+sum[u]+\sum\limits_{v\in son(u)}sum[v]$（这个点不是标记点）</li><li>$f[u]=0$（这个点是标记点）</li></ul><p>若这个点是标记点，则 $a_u=0,b_u=0,c_u=0,d_u=0$，以下考虑不是标记点的情况。</p><p>我们发现这个 $sum[u]$ 和 $sum[v]$ 比较恶心，我们考虑把它拆开：</p><script type="math/tex; mode=display">\begin{align*}sum[u]&=\sum_{v\in son(u)} f[v]\\&=\sum_{v\in son(u)}(a_vf[fa(fa(v))]+b_vf[fa(v)]+c_vsum[fa(v)]+d_v)\\&=\sum_{v\in son(u)}(a_vf[fa(u)]+b_vf[u]+c_vsum[u]+d_v)\\&=\sum_{v\in son(u)}a_vf[fa(u)]+\sum_{v\in son(u)}b_vf[u]+\sum_{v\in son(u)}c_vsum[u]+\sum_{v\in son(u)}d_v\end{align*}</script><p>即 $sum_a=\sum\limits_{v\in son(u)}a_v,sum_b=\sum\limits_{v\in son(u)}b_v,sum_c=\sum\limits_{v\in son(u)}c_v,sum_d=\sum\limits_{v\in son(u)}d_v$。</p><p>则 $sum[u]=sum_a\cdot f[fa(u)]+sum_b\cdot f[u]+sum_c\cdot sum[u]+sum_d$。</p><p>移项： $(1-sum_c)\cdot sum[u]=sum_a\cdot f[fa(u)]+sum_b\cdot f[u]+sum_d$。</p><p>两边同除 $1-sum_c$ 可得：$sum[u]=\dfrac{sum_a\cdot f[fa(u)]+sum_b\cdot f[u]+sum_d}{1-sum_c}$</p><p>令 $sa[u]=\dfrac{sum_a}{1-sum_c},sb[u]=\dfrac{sum_b}{1-sum_c},sd[u]=\dfrac{sum_d}{1-sum_c}$。</p><p>那么：$sum[u]=sa[u]f[fa(u)]+sb[u]f[u]+sd[u]$。由于 $a_v,b_v,c_v,d_v$ 已知，那么 $sa[u],sb[u],sd[u]$ 已知，即可求出 $sum[u],sum[v]$ 的表达式。</p><p>先将 $sum[v]$ 拆开，代入 $f[u]$ 所满足的式子：<br>$t_uf[u]=f[fa(fa(u))]+f[fa(u)]+sum[fa(u)]+sum[u]+\sum\limits_{v\in son(u)}(sa[v]f[u]+sb[v]f[v]+sd[v])$</p><p>将和式拆分：$t_uf[u]=f[fa(fa(u))]+f[fa(u)]+sum[fa(u)]+sum[u]+f[u]\sum\limits_{v\in son(u)}sa[v]+\sum\limits_{v\in son(u)}sb[v]f[v]+\sum\limits_{v\in son(u)} sd[v]$</p><p>再将 $f[v]$ 拆开：$t_uf[u]=f[fa(fa(u))]+f[fa(u)]+sum[fa(u)]+sum[u]+f[u]\sum\limits_{v\in son(u)}sa[v]+\sum\limits_{v\in son(u)} sd[v]+\sum\limits_{v\in son(u)} sb[v]\cdot (a_vf[fa(u)]+b_vf[u]+c_vsum[u]+d_v)$</p><p>整理：$t_uf[u]=f[fa(fa(u))]+f[fa(u)]+sum[fa(u)]+sum[u]+f[u]\sum\limits_{v\in son(u)}sa[v]+\sum\limits_{v\in son(u)} sd[v]+\sum\limits_{v\in son(u)} sb[v]a_vf[fa(u)]+\sum\limits_{v\in son(u)}sb[v]b_vf[u]+\sum\limits_{v\in son(u)}sb[v]c_vsum[u]+\sum\limits_{v\in son(u)}sb[v]d_v$</p><p>移项：$f[fa(fa(u))]+(1+\sum\limits_{v\in son(u)} sb[v]a_v)f[fa(u)]+sum[fa(u)]+(\sum\limits_{v\in son(u)}sb[v]d_v+\sum\limits_{v\in son(u)} sd[v])+(\sum\limits_{v\in son(u)}sa[v]+\sum\limits_{v\in son(u)}sb[v]b_v-t_u)f[u]+(1+\sum\limits_{v\in son(u)}sb[v]c_v)sum[u]=0$</p><p>再将 $sum[u]$ 拆开：</p><p>$f[fa(fa(u))]+(1+\sum\limits_{v\in son(u)} sb[v]a_v)f[fa(u)]+sum[fa(u)]+(\sum\limits_{v\in son(u)}sb[v]d_v+\sum\limits_{v\in son(u)} sd[v])+(\sum\limits_{v\in son(u)}sa[v]+\sum\limits_{v\in son(u)}sb[v]b_v-t_u)f[u]+(1+\sum\limits_{v\in son(u)}sb[v]c_v)(sa[u]f[fa(u)]+sb[u]f[u]+sd[u])=0$</p><p>记 $su=(1+\sum\limits_{v\in son(u)}sb[v]c_v)$，可得：</p><p>$f[fa(fa(u))]+(1+(\sum\limits_{v\in son(u)} sb[v]a_v)+su\cdot sa[u])f[fa(u)]+sum[fa(u)]+((\sum\limits_{v\in son(u)}sa[v])+(\sum\limits_{v\in son(u)}sb[v]b_v)-t_u+su\cdot sb[u])f[u]+((\sum\limits_{v\in son(u)}sb[v]d_v)+(\sum\limits_{v\in son(u)} sd[v])+su\cdot sd[u])=0$</p><p>令 $c_1=t_u-(\sum\limits_{v\in son(u)}sa[v])-(\sum\limits_{v\in son(u)}sb[v]b_v)-su\cdot sb[u],c_2=1+(\sum\limits_{v\in son(u)} sb[v]a_v)+su\cdot sa[u],c_3=(\sum\limits_{v\in son(u)}sb[v]d_v)+(\sum\limits_{v\in son(u)} sd[v])+su\cdot sd[u]$</p><p>整理：$c_1f[u]=f[fa(fa(u))]+c_2f[fa(u)]+sum[fa(u)]+c_3$</p><p>两边同除 $c_1$：$f[u]=\frac{1}{c_1}f[fa(fa(u))]+\frac{c_2}{c_1}f[fa(u)]+\frac{1}{c_1}sum[fa(u)]+\frac{c_3}{c_1}$。</p><p>可得：$a_u=\frac{1}{c_1},b_u=\frac{c_2}{c_1},c_u=\frac{1}{c_1},d_u=\frac{c_3}{c_1}$。</p><p>至此可以求出所有点 $f$ 都可以用 $a,b,c,d$ 表达出来，同时也把所有点的 $sa,sb,sc,sd$ 也都求出来了。</p><p>$f[u]=a_uf[fa(fa(u))]+b_uf[fa(u)]+c_usum[fa(u)]+d_u$，那么可以将 $sum[fa(u)]$ 拆开，可得：</p><p>$f[u]=a_uf[fa(fa(u))]+b_uf[fa(u)]+c_u(sa[fa(u)]f[fa(fa(u))]+sb[fa(u)]f[fa(u)]+sd[fa(u)])+d_u$</p><p>整理：$f[u]=(a_u+c_usa[fa(u)])f[fa(fa(u))]+(b_u+c_usb[fa(u)])f[fa(u)]+(c_u\cdot sd[fa(u)]+d_u)$。</p><p>令 $f[u]=a’_uf[fa(fa(u))]+b’_uf[fa(u)]+d’_u$</p><p>则 $a’_u=a_u+c_usa[fa(u)],b’_u=b_u+c_usb[fa(u)],d’_u=c_u\cdot sd[fa(u)]+d_u$。</p><p>注意，这个地方 $f[1]$ 不能这样拆开，因为 $fa(1)=0,sa[0],sb[0],sd[0]$ 没有处理，而 $sum[0]=f[1]$，解一下：</p><p>$f[1]=c_1f[1]+d_1$，而 $(1-c_1)f[1]=d_1$，则 $f[1]=\frac{d_1}{1-c_1}$。所有点的 $f$ 值可以用一遍从上到下的 $dfs$ 求得。</p><p>这样这道题就做完了，不过注意若一个点是标记点也要处理 $sa,sb,sc,sd$，它们会在转移它的父亲的时候用到。</p><p>时间复杂度 $O(n)$，空间复杂度 $O(n)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day3</span></span><br><span class="line"><span class="comment"> * Problem：tree</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/24</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m,tot[<span class="number">110000</span>],f[<span class="number">110000</span>]; <span class="keyword">bool</span> vis[<span class="number">110000</span>];</span><br><span class="line"><span class="keyword">int</span> sa[<span class="number">110000</span>],sb[<span class="number">110000</span>],sd[<span class="number">110000</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">110000</span>],b[<span class="number">110000</span>],c[<span class="number">110000</span>],d[<span class="number">110000</span>];</span><br><span class="line"><span class="keyword">int</span> edgenum,vet[<span class="number">210000</span>],Next[<span class="number">210000</span>],Head[<span class="number">110000</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y)</span></span>&#123; x+=y; <span class="keyword">if</span> (x&gt;=Mod) x-=Mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">vet[++edgenum]=v;</span><br><span class="line">Next[edgenum]=Head[u];</span><br><span class="line">Head[u]=edgenum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a&amp;<span class="number">1</span>) res=res*x%Mod;</span><br><span class="line">        x=x*x%Mod; a&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getinv</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> qpow(x,Mod<span class="number">-2</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">tot[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">tot[u]++;</span><br><span class="line">dfs(vet[e],u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> fa_2)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt=(fa?tot[fa]:<span class="number">1</span>)+(fa_2!=<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">cnt+=tot[vet[e]]; dp(vet[e],u,fa);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fu=Mod-cnt,ffa=<span class="number">1</span>,ffafa=<span class="number">1</span>,sfa=<span class="number">1</span>,fc=cnt,su=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">add(fu,sa[vet[e]]); <span class="comment">//sb[vet[e]]*f[vet[e]];</span></span><br><span class="line">add(ffa,<span class="number">1l</span>l*a[vet[e]]*sb[vet[e]]%Mod);</span><br><span class="line">add(fu,<span class="number">1l</span>l*b[vet[e]]*sb[vet[e]]%Mod);</span><br><span class="line">add(su,<span class="number">1l</span>l*c[vet[e]]*sb[vet[e]]%Mod);</span><br><span class="line">add(fc,<span class="number">1l</span>l*d[vet[e]]*sb[vet[e]]%Mod);</span><br><span class="line">add(fc,sd[vet[e]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> suma=<span class="number">0</span>,sumb=<span class="number">0</span>,sumc=<span class="number">0</span>,sumd=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">add(suma,a[vet[e]]); add(sumb,b[vet[e]]);</span><br><span class="line">add(sumc,c[vet[e]]); add(sumd,d[vet[e]]);</span><br><span class="line">&#125;</span><br><span class="line">ll inv=getinv(Mod+<span class="number">1</span>-sumc);</span><br><span class="line">sa[u]=inv*suma%Mod; sb[u]=inv*sumb%Mod; sd[u]=inv*sumd%Mod;</span><br><span class="line">add(ffa,<span class="number">1l</span>l*su*sa[u]%Mod);</span><br><span class="line">add(fu,<span class="number">1l</span>l*su*sb[u]%Mod);</span><br><span class="line">add(fc,<span class="number">1l</span>l*su*sd[u]%Mod);</span><br><span class="line">fu=(Mod-fu)%Mod; inv=getinv(fu);</span><br><span class="line">fu=inv*fu%Mod; ffa=inv*ffa%Mod; ffafa=inv*ffafa%Mod; sfa=inv*sfa%Mod; fc=inv*fc%Mod;</span><br><span class="line">a[u]=ffafa; b[u]=ffa; c[u]=sfa; d[u]=fc;</span><br><span class="line"><span class="keyword">if</span> (vis[u]) a[u]=<span class="number">0</span>,b[u]=<span class="number">0</span>,c[u]=<span class="number">0</span>,d[u]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">add(a[vet[e]],<span class="number">1l</span>l*c[vet[e]]*sa[u]%Mod);</span><br><span class="line">add(b[vet[e]],<span class="number">1l</span>l*c[vet[e]]*sb[u]%Mod);</span><br><span class="line">add(d[vet[e]],<span class="number">1l</span>l*c[vet[e]]*sd[u]%Mod);</span><br><span class="line">dfs2(vet[e],u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getans</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line"><span class="keyword">if</span> (vet[e]==fa) <span class="keyword">continue</span>;</span><br><span class="line">f[vet[e]]=(<span class="number">1l</span>l*a[vet[e]]*f[fa]+<span class="number">1l</span>l*b[vet[e]]*f[u]+d[vet[e]])%Mod;</span><br><span class="line">getans(vet[e],u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;tree.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;tree.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">n=read(); m=read(); <span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">u=read(); v=read();</span><br><span class="line">addedge(u,v); addedge(v,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">x=read();</span><br><span class="line">vis[x]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>); dp(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">dfs2(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1l</span>l*getinv(Mod+<span class="number">1</span>-c[<span class="number">1</span>])*d[<span class="number">1</span>]%Mod;</span><br><span class="line">getans(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ckw的树&quot;&gt;&lt;a href=&quot;#ckw的树&quot; class=&quot;headerlink&quot; title=&quot;ckw的树&quot;&gt;&lt;/a&gt;ckw的树&lt;/h2&gt;&lt;p&gt;设 $f[u]$ 表示从 $u$ 开始游走的期望时间。不妨设 $f[u]=a_uf[fa(fa(u))]+b_uf[</summary>
      
    
    
    
    <category term="CSP-S模拟赛" scheme="http://example.com/categories/CSP-S%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    
    <category term="树形dp（期望）" scheme="http://example.com/tags/%E6%A0%91%E5%BD%A2dp%EF%BC%88%E6%9C%9F%E6%9C%9B%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>20200924 模拟赛题解</title>
    <link href="http://example.com/2020/09/24/sol_5/"/>
    <id>http://example.com/2020/09/24/sol_5/</id>
    <published>2020-09-23T16:00:00.000Z</published>
    <updated>2020-09-30T12:09:29.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="number"><a href="#number" class="headerlink" title="number"></a>number</h2><script type="math/tex; mode=display">\begin{align*}ans&=\sum_{i=1}^n\sum_{j=i}^n\sum_{p\in \mathcal{P}} [p\mid\prod_{k=i}^ja_k]\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{j=i}^n [p\mid\prod_{k=i}^ja_k]\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{j=i}^n [(p\mid a_i) \lor (p\mid a_{i+1}) \lor (p\mid a_{i+2})\lor\cdots\lor(p\mid a_j)]\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{j=i}^n \sum_{k=i}^j[(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})\land (p\mid a_{k})]\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{k=i}^n \sum_{j=k}^n[(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})\land (p\mid a_{k})]\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{k=i}^n [(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})\land (p\mid a_{k})]\sum_{j=k}^n1\\&=\sum_{p\in \mathcal{P}}\sum_{i=1}^n\sum_{k=i}^n [(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})\land (p\mid a_{k})]\cdot (n-k+1)\\&=\sum_{p\in \mathcal{P}}\sum_{k=1}^n(\sum_{i=1}^k [(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})\land (p\mid a_{k})])\cdot (n-k+1)\\&=\sum_{k=1}^n\sum_{p\in \mathcal{P},p\mid a_k}(n-k+1)(\sum_{i=1}^k [(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})])\end{align*}</script><p>注意到，求出最大的 $j&lt;k$ 满足 $p\mid a_j$，那么上式 $\sum\limits_{i=1}^k [(p\nmid a_i) \land (p\nmid a_{i+1}) \land\cdots\land (p\nmid a_{k-1})]=k-j$</p><p>从左往右扫，对于每个 $p$ 记录满足条件的 $j$，就做完了。时间复杂度 $O(n \ln n)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day4</span></span><br><span class="line"><span class="comment"> * Problem：number</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/24</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,lst[<span class="number">1100000</span>],num[<span class="number">1100000</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,prime[<span class="number">1100000</span>];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (!lst[i])&#123;</span><br><span class="line">        lst[i]=i;</span><br><span class="line">        prime[++cnt]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*prime[j]&lt;=n;j++)&#123;</span><br><span class="line">        lst[i*prime[j]]=prime[j];</span><br><span class="line">        <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;number.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;number.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">init(<span class="number">1000000</span>); n=read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;i++) num[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x,y; ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">x=read(); y=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (x!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (y!=lst[x])&#123;</span><br><span class="line">ans+=<span class="number">1l</span>l*(i-num[lst[x]])*(n-i+<span class="number">1</span>);</span><br><span class="line">num[lst[x]]=i;</span><br><span class="line">&#125;</span><br><span class="line">y=lst[x]; x/=lst[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="seq"><a href="#seq" class="headerlink" title="seq"></a>seq</h2><p>这个数列是个一阶递推数列。</p><p>又因为每个值都在 $[0,m)$ 内（除了 $x_0$ 有可能为 $m$）。</p><p>所以我们可以通过倍增轻易求出 $x_0=k,\forall k\in[0,m]$ 时，$x_i,\forall i\in[0,t]$ 的值。</p><p>然后，我们考虑每个 $k$，对于所有的 $t_1+t_2=k$，可能的 $|t_1-t_2|$ 的值。</p><p>若 $k\leqslant m$</p><ul><li>若 $k$ 是偶数，可能为 $k,k-2,\cdots ,2,0,2,\cdots k-2,k$。即 $0,2,2,4,4,6,6,\cdots,k,k$。</li><li>若 $k$ 是奇数，可能为 $k,k-2,\cdots ,3,1,1,3,\cdots k-2,k$。即 $1,1,3,3,5,5,\cdots,k,k$。</li></ul><p>若 $m+1\leqslant k\leqslant 2m$</p><ul><li>若 $k$ 是偶数，可能为 $2m-k,2m-k-2,\cdots ,2,0,2,\cdots 2m-k-2,2m-k$。即 $0,2,2,4,4,6,6,\cdots,2m-k,2m-k$。</li><li>若 $k$ 是奇数，可能为 $2m-k,2m-k-2,\cdots ,3,1,1,3,\cdots 2m-k-2,2m-k$。即 $1,1,3,3,5,5,\cdots,2m-k,2m-k$。</li></ul><p>我们可以倍增记录 $x_0=a,\forall 0\leqslant l\leqslant m,x_0+x_2+x_4+\cdots,x_{2l}$。</p><p>那么偶数的答案可以轻松的算出，奇数的答案的话，先将 $x’_0$ 变为 $x_1$，再类似的做即可。</p><p>时间复杂度 $O(n\log n)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day4</span></span><br><span class="line"><span class="comment"> * Problem：seq</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/24</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> t,a,c,m,k,f[<span class="number">1100000</span>],fa[<span class="number">1100000</span>][<span class="number">21</span>],sum[<span class="number">1100000</span>][<span class="number">21</span>];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">d++;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">if</span> (d&amp;(<span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">res=(res+sum[x][i])%Mod;</span><br><span class="line">x=fa[x][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;seq.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;seq.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">t=read(); a=read(); c=read(); m=read(); k=read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++) f[i]=(<span class="number">1l</span>l*a*i+c)%m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">fa[i][<span class="number">0</span>]=f[f[i]];</span><br><span class="line">sum[i][<span class="number">0</span>]=i%k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">fa[i][j]=fa[fa[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];</span><br><span class="line">sum[i][j]=((sum[i][j<span class="number">-1</span>]+sum[fa[i][j<span class="number">-1</span>]][j<span class="number">-1</span>])%Mod)%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=t;i++)</span><br><span class="line"><span class="keyword">if</span> (i&amp;<span class="number">1</span>) ans=(ans+<span class="number">2l</span>l*getsum(f[i],(i<span class="number">-1</span>)/<span class="number">2</span>))%Mod;</span><br><span class="line"><span class="keyword">else</span> ans=(ans+<span class="number">2l</span>l*getsum(i,i/<span class="number">2</span>)-i%k)%Mod;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=t+<span class="number">1</span>;i&lt;=t+t;i++)</span><br><span class="line"><span class="keyword">if</span> (i&amp;<span class="number">1</span>) ans=(ans+<span class="number">2l</span>l*getsum(f[i],(<span class="number">2</span>*t-i<span class="number">-1</span>)/<span class="number">2</span>))%Mod;</span><br><span class="line"><span class="keyword">else</span> ans=(ans+<span class="number">2l</span>l*getsum(i,(<span class="number">2</span>*t-i)/<span class="number">2</span>)-i%k)%Mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="kth"><a href="#kth" class="headerlink" title="kth"></a>kth</h2><p>将相同的数也钦定一个大小关系，不妨设相同的情况下越靠后的数越大。</p><p>将数从大到小排序，求出当前数左边最靠右的 $k$ 个比它大的数和当前数右边靠左的 $k$ 个比它大的数。</p><p>这个可以用个链表串起来（直接 $set$ 暴力查是 $k\log n$ 的，链表的话少个 $\log$）然后求。</p><p>之后就随便求就好了，枚举左边有多少个比它大的即可。</p><p>时间复杂度 $O(n\log n+nk)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day4</span></span><br><span class="line"><span class="comment"> * Problem：kth</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/24</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">int</span> n,k,a[<span class="number">210000</span>];</span><br><span class="line"><span class="keyword">int</span> num1[<span class="number">210000</span>],num2[<span class="number">210000</span>];</span><br><span class="line"><span class="keyword">int</span> nxt[<span class="number">210000</span>],lst[<span class="number">210000</span>];</span><br><span class="line">pii tmp[<span class="number">210000</span>]; <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;kth.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;kth.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">n=read(); k=read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++) nxt[i]=i,lst[i]=i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) tmp[i].first=read(),tmp[i].second=i;</span><br><span class="line">sort(tmp+<span class="number">1</span>,tmp+n+<span class="number">1</span>,greater&lt;pii&gt;());</span><br><span class="line"></span><br><span class="line">s.insert(<span class="number">0</span>); s.insert(n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> x,l,r,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">x=tmp[i].second;</span><br><span class="line">l=*--s.lower_bound(x); r=*s.upper_bound(x); s.insert(x);</span><br><span class="line">nxt[l]=x; lst[x]=l; lst[r]=x; nxt[x]=r;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;i++) num1[i]=<span class="number">0</span>,num2[i]=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> cnt1=<span class="number">0</span>,cnt2=<span class="number">0</span>,now;</span><br><span class="line">now=x; <span class="keyword">while</span> (cnt1&lt;=k&amp;&amp;now)&#123; num1[++cnt1]=now; now=lst[now];&#125;</span><br><span class="line">now=nxt[x]; <span class="keyword">while</span> (cnt2&lt;=k&amp;&amp;now)&#123; num2[++cnt2]=now; now=nxt[now];&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=k;l++)&#123;</span><br><span class="line"><span class="keyword">int</span> r=k-l+<span class="number">1</span>;</span><br><span class="line">ans=(ans+<span class="number">1l</span>l*(num1[l]-num1[l+<span class="number">1</span>])*(num2[r]-x)%Mod*tmp[i].first)%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printf(&quot;%d\n&quot;,ans);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6 2</span></span><br><span class="line"><span class="comment">96 29 71 28 91 64</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="subseq"><a href="#subseq" class="headerlink" title="subseq"></a>subseq</h2><p>一般子序列的 $dp$，就是 $dp[i][j]=\begin{cases}<br>   1+\sum\limits_k dp[i-1][k] &amp; j=s_i \\<br>   dp[i-1][j] &amp; j\neq s_i<br>\end{cases}$</p><p>现在要求 $\bmod 2$ 的值，那就是 $dp[i][j]=\begin{cases}<br>   1\oplus\bigoplus\limits_k dp[i-1][k] &amp; j=s_i \\<br>   dp[i-1][j] &amp; j\neq s_i<br>\end{cases}$</p><p>可以发现一些性质：</p><ol><li>若原来 $dp[i-1]$ 有奇数个 $1$，现在是一个 $dp[i-1][c]=0$ 的字符 $c$，那么 $dp[i-1][c]$ 没有任何变化。</li><li>若原来 $dp[i-1]$ 有奇数个 $1$，现在是一个 $dp[i-1][c]=1$ 的字符 $c$，那么 $dp[i-1][c]$ 变为了 $0$。</li><li>若原来 $dp[i-1]$ 有偶数个 $1$，现在是一个 $dp[i-1][c]=0$ 的字符 $c$，那么 $dp[i-1][c]$ 变为了 $1$。</li><li>若原来 $dp[i-1]$ 有偶数个 $1$，现在是一个 $dp[i-1][c]=1$ 的字符 $c$，那么 $dp[i-1][c]$ 没有任何变化。</li></ol><p>那么，我们会发现，$dp[i-1]$ 中只有一个字符 $c$ 满足 $dp[i][c]=1$，其余位置都为 $0$。不妨记录这个字符。</p><p>考虑加入一个字符 $s_i$：</p><ul><li>若 $c=\emptyset$，由性质 3.，$c’=s_i$。</li><li>若 $c=s_i$，由性质 2.，$c’=\emptyset$。</li><li>否则，由性质 1.，$c’=c$。</li></ul><p>由于我们要合并两个字符串，所有需要知道所有 $c$ 作为初始时，每个字符串最后会变成哪个 $c’$。</p><p>然后直接设 $dp[i][j]$ 表示已经选了状态为 $i$ 的字符串，现在的 $c=j$ 的方案数，直接转移即可。</p><p>时间复杂度 $O(2^nn|\Sigma|)$。</p><p><br/></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：zr09 - day4</span></span><br><span class="line"><span class="comment"> * Problem：subseq</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/9/24</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,trans[<span class="number">31</span>][<span class="number">31</span>];</span><br><span class="line">ll f[<span class="number">1100000</span>][<span class="number">31</span>];</span><br><span class="line"><span class="keyword">int</span> len,s[<span class="number">110000</span>];</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readst</span><span class="params">()</span></span>&#123;</span><br><span class="line">len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;a&#x27;</span>||ch&gt;<span class="string">&#x27;z&#x27;</span>) ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;z&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;a&#x27;</span>) s[++len]=ch-<span class="string">&#x27;a&#x27;</span>,ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;subseq.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;subseq.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">readst();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;=<span class="number">26</span>;c++)&#123;</span><br><span class="line"><span class="keyword">int</span> now=c;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len;j++)</span><br><span class="line"><span class="keyword">if</span> (now==<span class="number">26</span>) now=s[j];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (now==s[j]) now=<span class="number">26</span>;</span><br><span class="line">trans[i][c]=now;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> upperlim=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">26</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;upperlim;i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span> (!(i&amp;(<span class="number">1</span>&lt;&lt;j)))</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;=<span class="number">26</span>;c++)</span><br><span class="line">f[i|(<span class="number">1</span>&lt;&lt;j)][trans[j][c]]+=f[i][c];</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;=<span class="number">25</span>;c++) ans+=f[upperlim][c];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;number&quot;&gt;&lt;a href=&quot;#number&quot; class=&quot;headerlink&quot; title=&quot;number&quot;&gt;&lt;/a&gt;number&lt;/h2&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\begin{align*}
ans</summary>
      
    
    
    
    <category term="CSP-S模拟赛" scheme="http://example.com/categories/CSP-S%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    
    <category term="zr9月线下" scheme="http://example.com/tags/zr9%E6%9C%88%E7%BA%BF%E4%B8%8B/"/>
    
  </entry>
  
  <entry>
    <title>CF555E 题解</title>
    <link href="http://example.com/2020/09/24/sol_6/"/>
    <id>http://example.com/2020/09/24/sol_6/</id>
    <published>2020-09-23T16:00:00.000Z</published>
    <updated>2020-09-30T12:00:18.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CF555E"><a href="#CF555E" class="headerlink" title="CF555E"></a>CF555E</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定一个 $n$ 个点 $m$ 条边的无向图。有 $q$ 个人，第 $i$ 个人要从 $s_i$ 到 $t_i$。</p><p>现在你要给无向图的每条边定向。问是否存在一种定向方法使得所有人都能够到达目的地。</p><p>$n,m,q\leqslant 2\times 10^5,u_i\neq v_i,s_i\neq t_i$</p><ul><li>subtask1（1-8，20pts）：$n\leqslant 8,m\leqslant 15,q\leqslant 8$。</li><li>subtask2（11-13，10pts）：保证原图是一个菊花图，$m=n-1$。（即有且仅有一个点 $u$，它向其它所有点都有一条边）</li><li>subtask3（14-15，10pts）：保证图是一条链，$m=n-1$。</li><li>subtask4（16-20，30pts）：保证图是一棵树，$m=n-1$。（依赖subtask 2,3）</li><li>subtask5（20-30,9,10，30pts）：无特殊限制。（依赖subtask 1,2,3,4）</li></ul><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><h4 id="我的做法（186ms）"><a href="#我的做法（186ms）" class="headerlink" title="我的做法（186ms）"></a>我的做法（186ms）</h4><p>可以发现，对于一个边双来说，一定存在一种定向方法，使得边数内两两点之间均可到达。</p><p>所以一个边双相当于一个点。那么我们缩点，把图变成一颗树。这样，$s$ 到 $t$ 只能走树上简单路径。</p><p>我们把 $s\rightarrow LCA$ 的路径打向上的标记，把 $LCA\rightarrow t$ 的路径打向下的标记。$LCA$ 可以通过倍增预处理。</p><p>只要没有一条边同时有两种标记，就是合法的。打标记使用树上差分实现。</p><p>时间复杂度：$ O(n+m+q\log n)$。</p><p>有一些细节：</p><ol><li>原图不保证连通，所以在缩点，预处理倍增，判断答案的时候要在每个连通块都做一次。</li><li>原图可能有重边，所以 $\rm tarjan$ 的时候要记上一条边的编号而不是父亲节点。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：互测</span></span><br><span class="line"><span class="comment"> * Problem：CF555E</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/8/30 - 2020/8/31</span></span><br><span class="line"><span class="comment"> * Encoding：Simplified Chinese (GB2312)</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="comment">//#define File(x) freopen(x&quot;.in&quot;,&quot;r&quot;,stdin);freopen(x&quot;.out&quot;,&quot;w&quot;,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">210000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">410000</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,q,u[MAXN],v[MAXN];</span><br><span class="line"><span class="keyword">int</span> top,st[MAXN],fr[MAXN],dep[MAXN];</span><br><span class="line"><span class="keyword">int</span> cnt2,fa[MAXN][<span class="number">19</span>]; <span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> cnt,num[MAXN],up[MAXN],dw[MAXN];</span><br><span class="line"><span class="keyword">int</span> dtime,dfn[MAXN],low[MAXN];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec[MAXN];</span><br><span class="line"><span class="keyword">int</span> edgenum=<span class="number">1</span>,vet[MAXM],Next[MAXM],Head[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">vet[++edgenum]=v;</span><br><span class="line">Next[edgenum]=Head[u];</span><br><span class="line">Head[u]=edgenum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> le)</span></span>&#123;<span class="comment">//2.</span></span><br><span class="line">dfn[u]=low[u]=++dtime;</span><br><span class="line">st[++top]=u; <span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line">v=vet[e];</span><br><span class="line"><span class="keyword">if</span> (e==(le^<span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (!dfn[v])&#123;</span><br><span class="line">tarjan(v,e);</span><br><span class="line">low[u]=min(low[u],low[v]);</span><br><span class="line">&#125; <span class="keyword">else</span> low[u]=min(low[u],dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dfn[u]==low[u])&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">while</span> (st[top]!=u)&#123; num[st[top]]=cnt; top--;&#125;</span><br><span class="line">num[st[top]]=cnt; top--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">fr[u]=cnt2; dep[u]=dep[f]+<span class="number">1</span>; fa[u][<span class="number">0</span>]=f;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;dep[u];i++) fa[u][i]=fa[fa[u][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> v:vec[u])&#123;</span><br><span class="line"><span class="keyword">if</span> (v==f) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">vis[u]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> v:vec[u])&#123;</span><br><span class="line"><span class="keyword">if</span> (v==f) <span class="keyword">continue</span>;</span><br><span class="line">dfs2(v,u);</span><br><span class="line">up[u]+=up[v]; dw[u]+=dw[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (dep[x]&lt;dep[y]) swap(x,y);</span><br><span class="line"><span class="keyword">int</span> d=dep[x]-dep[y];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">18</span>;i++)</span><br><span class="line"><span class="keyword">if</span> (d&amp;(<span class="number">1</span>&lt;&lt;i)) x=fa[x][i];</span><br><span class="line"><span class="keyword">if</span> (x==y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">18</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">if</span> (fa[x][i]!=fa[y][i])&#123;</span><br><span class="line">x=fa[x][i];</span><br><span class="line">y=fa[y][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s,t;</span><br><span class="line"><span class="keyword">while</span> (q--)&#123;</span><br><span class="line">s=read(); t=read();</span><br><span class="line">s=num[s]; t=num[t];</span><br><span class="line"><span class="keyword">if</span> (fr[s]!=fr[t]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> w=LCA(s,t);</span><br><span class="line">up[s]++; up[w]--;</span><br><span class="line">dw[t]++; dw[w]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> (!vis[i]) dfs2(i,<span class="number">0</span>);<span class="comment">//1.</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line"><span class="keyword">if</span> (up[i]&amp;&amp;dw[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n=read(); m=read(); q=read();</span><br><span class="line">edgenum=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">u[i]=read(); v[i]=read();</span><br><span class="line">addedge(u[i],v[i]); addedge(v[i],u[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i]) tarjan(i,<span class="number">0</span>);<span class="comment">//1.</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">x=num[u[i]]; y=num[v[i]];</span><br><span class="line"><span class="keyword">if</span> (x==y) <span class="keyword">continue</span>;</span><br><span class="line">vec[x].push_back(y);</span><br><span class="line">vec[y].push_back(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line"><span class="keyword">if</span> (!fr[i])&#123; cnt2++; dfs(i,<span class="number">0</span>);&#125;<span class="comment">//1.</span></span><br><span class="line"><span class="keyword">if</span> (check()) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CodeForces-最快做法（124ms）"><a href="#CodeForces-最快做法（124ms）" class="headerlink" title="CodeForces 最快做法（124ms）"></a>CodeForces 最快做法（124ms）</h4><p>思路与前述相同。</p><p>使用了 $\rm tarjan$ 求 $LCA$，时间复杂度 $O(n+m+q)$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E 400003</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Spush(x) (in[sk[++sp]=x]=true)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Spop() (in[sk[sp--]]=false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Stop() (sk[sp])</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Dp (puts(<span class="meta-string">&quot;&quot;</span>))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Dw printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Df(i,s,t) for(int i=s;i&lt;=t;i++)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span><span class="keyword">int</span> y,t;&#125;e[E];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Query</span>&#123;</span><span class="keyword">int</span> y,t,ans;&#125;Q[E];</span><br><span class="line"><span class="keyword">bool</span> in[N],used[N],done[N],vis[N],IsPos[N];</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> n,m,q,x[N],y[N],qx,qy,h[N],ep=<span class="number">1</span>,sk[N],sp,dfn[N],low[N],tm,color[N],cp,hq[N],qp=<span class="number">1</span>,f[N],djw,djf,djt,dep[N],fa[N],pos[N],neg[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;x=<span class="number">0</span>;<span class="keyword">do</span>&#123;ch=getchar();&#125;<span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||<span class="string">&#x27;9&#x27;</span>&lt;ch);<span class="keyword">do</span>&#123;x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;ch=getchar();&#125;<span class="keyword">while</span>(<span class="string">&#x27;0&#x27;</span>&lt;=ch&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddEdge</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x,<span class="keyword">const</span> <span class="keyword">int</span> &amp;y)</span></span>&#123;e[++ep].y=y;e[ep].t=h[x];h[x]=ep;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">AddQuery</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x,<span class="keyword">const</span> <span class="keyword">int</span> &amp;y)</span></span>&#123;Q[++qp].y=y;Q[qp].t=hq[x];hq[x]=qp;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">djw=x;<span class="keyword">while</span>(f[djw]!=djw)djw=f[djw];djf=djw;</span><br><span class="line">djw=x;<span class="keyword">while</span>(djw!=djf)&#123;djt=f[djw];f[djw]=djf;djw=djt;&#125;</span><br><span class="line"><span class="keyword">return</span> djf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TarjanSCC</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x]=low[x]=++tm;</span><br><span class="line">Spush(x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=h[x];i;i=e[i].t)</span><br><span class="line"><span class="keyword">if</span>(!used[i&gt;&gt;<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[e[i].y])</span><br><span class="line">&#123;</span><br><span class="line">used[i&gt;&gt;<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">TarjanSCC(e[i].y);</span><br><span class="line">low[x]=min(low[x],low[e[i].y]);</span><br><span class="line">used[i&gt;&gt;<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(in[e[i].y])low[x]=min(low[x],dfn[e[i].y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[x]==low[x])</span><br><span class="line">&#123;</span><br><span class="line">color[x]=++cp;</span><br><span class="line"><span class="keyword">while</span>(Stop()!=x)</span><br><span class="line">&#123;</span><br><span class="line">color[Stop()]=cp;</span><br><span class="line">Spop();</span><br><span class="line">&#125;</span><br><span class="line">Spop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TarjanLCA</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">done[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=h[x];i;i=e[i].t)</span><br><span class="line"><span class="keyword">if</span>(!done[e[i].y])TarjanLCA(e[i].y),f[e[i].y]=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=hq[x];i;i=Q[i].t)</span><br><span class="line"><span class="keyword">if</span>(done[Q[i].y])Q[i|<span class="number">1</span>].ans=F(Q[i].y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=h[x];i;i=e[i].t)</span><br><span class="line"><span class="keyword">if</span>(e[i].y!=fa[x])</span><br><span class="line">&#123;</span><br><span class="line">fa[e[i].y]=x;</span><br><span class="line">dep[e[i].y]=dep[x]+<span class="number">1</span>;</span><br><span class="line">dfs(e[i].y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetPosUp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=h[x];i;i=e[i].t)</span><br><span class="line"><span class="keyword">if</span>(!vis[e[i].y])</span><br><span class="line">&#123;</span><br><span class="line">GetPosUp(e[i].y);</span><br><span class="line">pos[x]=max(pos[x],pos[e[i].y]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pos[x])IsPos[x]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNegUp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=h[x];i;i=e[i].t)</span><br><span class="line"><span class="keyword">if</span>(!vis[e[i].y])</span><br><span class="line">&#123;</span><br><span class="line">GetNegUp(e[i].y);</span><br><span class="line">neg[x]=max(neg[x],neg[e[i].y]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(neg[x])<span class="keyword">if</span>(IsPos[x])&#123;<span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);<span class="built_in">exit</span>(<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">read(n),read(m),read(q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)read(x[i]),read(y[i]),AddEdge(x[i],y[i]),AddEdge(y[i],x[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(!dfn[i])TarjanSCC(i);</span><br><span class="line"><span class="built_in">memset</span>(e,<span class="number">0</span>,<span class="keyword">sizeof</span>(e));</span><br><span class="line"><span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="keyword">sizeof</span>(h));</span><br><span class="line">ep=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="keyword">if</span>(color[x[i]]!=color[y[i]])AddEdge(color[x[i]],color[y[i]]),AddEdge(color[y[i]],color[x[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">&#123;</span><br><span class="line">read(qx),read(qy);</span><br><span class="line"><span class="keyword">if</span>(color[qx]!=color[qy])AddQuery(color[qx],color[qy]),AddQuery(color[qy],color[qx]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cp;i++)f[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cp;i++)<span class="keyword">if</span>(!done[i])TarjanLCA(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cp;i++)<span class="keyword">if</span>(!dep[i])dep[i]=<span class="number">1</span>,dfs(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=qp;i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">pos[Q[i|<span class="number">1</span>].y]=dep[Q[i|<span class="number">1</span>].y]-dep[Q[i|<span class="number">1</span>].ans];</span><br><span class="line">neg[Q[i].y]=dep[Q[i].y]-dep[Q[i|<span class="number">1</span>].ans];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(!vis[i])GetPosUp(i);</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(!vis[i])GetNegUp(i);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;CF555E&quot;&gt;&lt;a href=&quot;#CF555E&quot; class=&quot;headerlink&quot; title=&quot;CF555E&quot;&gt;&lt;/a&gt;CF555E&lt;/h2&gt;&lt;h3 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Codeforces" scheme="http://example.com/categories/Codeforces/"/>
    
    
    <category term="Tarjan" scheme="http://example.com/tags/Tarjan/"/>
    
  </entry>
  
  <entry>
    <title>僵尸</title>
    <link href="http://example.com/2020/08/23/sol_1/"/>
    <id>http://example.com/2020/08/23/sol_1/</id>
    <published>2020-08-22T16:00:00.000Z</published>
    <updated>2020-09-30T12:07:01.973Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><blockquote><p>给定一棵 $n$ 个点的无根树，每条边有一堵墙，高度在 $[l_i,r_i]$ 等概率出现。</p><p>有 $m$ 个僵尸，第 $i$ 只僵尸初始出生在 $x_i$ 点，能力值为 $h_i$，表示可以走过墙的高度 $&lt;h_i$ 的边。</p><p>称一个点是安全的，当且仅当它不能被任何一个僵尸走到。</p><p>求树上至少有一个点是安全的概率，对 $998244353$ 取模，有 $T$ 组数据。</p><p>$T\leqslant 5,1\leqslant n,m\leqslant 2000,1\leqslant x_i\leqslant n,1\leqslant l_i,r_i,h_i\leqslant 10^9$，保证 $r_i-l_i+1\neq 998244353$。</p><p>$\texttt{source:[Nowcoder2018 ACM多校第十场 I] Rikka with Zombies}$。</p></blockquote><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>先说说考场的思路：</p><ul><li>首先，因为所有高度都是等概率的，所以可以用 $p=\frac{\texttt{至少有一个点是安全的方案数}}{\texttt{总方案数}}$ 得到答案，而 $1-p=\frac{\texttt{所有点都不安全的方案数}}{\texttt{总方案数}}$，所以我们可以算所有点都不安全的方案数。</li><li>这个东西并不容易直接算，而这种树上计数问题一般考虑树形 $dp$。</li><li>所以，我当时设的是 $dp[u][i]$ 表示以 $u$ 为根，$u$ 子树内的所有点都是不安全的，且 $u$ 子树内能走到 $u$ 的能力值最大的僵尸编号。然后我们会发现，$u$ 子树内的一些点可能可以从子树外的僵尸走到，所以就不行了。</li></ul><p>正解：</p><ul><li>一般的树形 $dp$ 是只考虑子树内的，但是这题是要考虑子树外的。</li><li>设的是 $dp[u][i]$ 表示以 $u$ 为根，$u$ 子树内的所有点都是不安全的，子树外皆有可能，且能走到 $u$ 的能力值最大的僵尸编号（可以在子树外）。</li><li>考虑 $f[v][b]$ 对 $f[u][a]$ 的贡献， $v$ 是 $u$ 的一个孩子。</li><li>若 $a=b$，不论 $a$ 在 $v$ 子树内还是子树外，都必须能跨过 $(u,v)$。那么 $f[u][a]+=f[u][a]\times f[v][b]\times(a\texttt{能跨过}(u,v)\texttt{的方案数})$。</li><li>若 $a\neq b$，那么 $a,b$ 必定不同时在 $v$ 子树内或 $v$ 子树外，且它们两者能力值较大的必定不能跨过 $(u,v)$。</li><li>具体来说，若 $a<b$，且 $a$ 在子树 $v$ 外，$b$ 在子树 $v$ 内，那么 $f[u][a]+=f[u][a]\times f[v][b]\times(b\texttt{不能跨过}(u,v)\texttt{的方案数})$。若 $a>b$，且 $a$ 在子树 $v$ 外，$b$ 在子树 $v$ 内，那么 $f[u][a]+=f[u][a]\times f[v][b]\times(a\texttt{不能跨过}(u,v)\texttt{的方案数})$。</li><li>初值怎么设呢？设 $u$ 点出生的能力值最大的僵尸为 $k$（没有则为 $1$）， 则对于所有 $i\geqslant k$，$f[u][i]=1$。</li><li>但是，如果 $x[a]..u$ 之间的最小的 $l$ 都 $\geqslant h_a$ 的话，那贡献应该为 $0$，那它在 $dp$ 中会不会有贡献？</li><li>而在它们两个的 $LCA$ 的时候，贡献必定已经消失了，因为必定有一条边不能跨过，贡献是乘起来的，所以就是 $0$。也就是，它在 $LCA$ 的时候才能保证 $dp$ 值是正确的，在其他位置有可能是错误的，比较奇怪。显然的是， $f[1]$ 的值是对的，答案显然是 $\sum_i f[1][i]$。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment"> * Source：CSP-S模拟赛</span></span><br><span class="line"><span class="comment"> * Problem：zombie</span></span><br><span class="line"><span class="comment"> * Author：hydd</span></span><br><span class="line"><span class="comment"> * Date：2020/8/21</span></span><br><span class="line"><span class="comment"> * Encoding：Simplified Chinese (GB2312)</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">2100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXE=<span class="number">4100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> T,n,m,l[MAXN],r[MAXN],f[MAXN][MAXN],tmp[MAXN];</span><br><span class="line"><span class="keyword">int</span> edgenum,vet[MAXE],Next[MAXE],Head[MAXN];</span><br><span class="line"><span class="built_in">bitset</span>&lt;MAXN&gt; vis[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,v;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;a) <span class="keyword">const</span>&#123; <span class="keyword">return</span> v&lt;a.v;&#125;</span><br><span class="line">&#125; a[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getnum</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> v)</span></span>&#123; <span class="keyword">return</span> max(<span class="number">0</span>,min(v<span class="number">-1</span>,r[t])-l[t]+<span class="number">1</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> now[<span class="number">1</span>&lt;&lt;<span class="number">20</span>],*S,*T;</span><br><span class="line"><span class="keyword">if</span> (T==S)&#123;</span><br><span class="line">T=(S=now)+fread(now,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span> (T==S) <span class="keyword">return</span> EOF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *S++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch=Getchar();</span><br><span class="line"><span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">ch=Getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ch&lt;=<span class="string">&#x27;9&#x27;</span>&amp;&amp;ch&gt;=<span class="string">&#x27;0&#x27;</span>) x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=Getchar();</span><br><span class="line"><span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll x,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">ll res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (a)&#123;</span><br><span class="line"><span class="keyword">if</span> (a&amp;<span class="number">1</span>) res=res*x%Mod;</span><br><span class="line">x=x*x%Mod; a&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">vet[++edgenum]=v;</span><br><span class="line">Next[edgenum]=Head[u];</span><br><span class="line">Head[u]=edgenum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos=<span class="number">1</span>,v,sum;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line"><span class="keyword">if</span> (a[i].x==u) vis[u][i]=<span class="number">1</span>,pos=i;</span><br><span class="line"><span class="keyword">else</span> vis[u][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line">v=vet[e]; <span class="keyword">if</span> (v==fa) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v,u); vis[u]|=vis[v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) f[u][i]=(i&gt;=pos);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> e=Head[u];e;e=Next[e])&#123;</span><br><span class="line">v=vet[e]; <span class="keyword">if</span> (v==fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> t=e&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) tmp[i]=f[u][i],f[u][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;<span class="comment">//i=j</span></span><br><span class="line"><span class="keyword">int</span> k=getnum(t,a[i].v);</span><br><span class="line">f[u][i]=(f[u][i]+<span class="number">1l</span>l*tmp[i]*f[v][i]%Mod*k)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;<span class="comment">//i&gt;j，i在子树外，j在子树内</span></span><br><span class="line"><span class="keyword">int</span> k=getnum(t,a[i].v);</span><br><span class="line"><span class="keyword">if</span> (vis[v][i]) sum=(sum+f[v][i])%Mod;<span class="comment">//在子树内，记录前缀和</span></span><br><span class="line"><span class="keyword">else</span> f[u][i]=(f[u][i]+<span class="number">1l</span>l*tmp[i]*sum%Mod*(r[t]-l[t]+<span class="number">1</span>-k))%Mod;</span><br><span class="line">&#125;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=m;i&gt;=<span class="number">1</span>;i--)&#123;<span class="comment">//i&lt;j，i在子树外，j在子树内</span></span><br><span class="line"><span class="keyword">int</span> k=getnum(t,a[i].v);</span><br><span class="line"><span class="keyword">if</span> (vis[v][i]) sum=(sum+<span class="number">1l</span>l*f[v][i]*(r[t]-l[t]+<span class="number">1</span>-k))%Mod;<span class="comment">//在子树内，记录前缀和</span></span><br><span class="line"><span class="keyword">else</span> f[u][i]=(f[u][i]+<span class="number">1l</span>l*tmp[i]*sum)%Mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;zombie.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;zombie.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">T=read();</span><br><span class="line"><span class="keyword">while</span> (T--)&#123;</span><br><span class="line">n=read(); m=read(); <span class="keyword">int</span> ans=<span class="number">0</span>,ans2=<span class="number">1</span>;</span><br><span class="line">edgenum=<span class="number">1</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) Head[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">u=read(); v=read();</span><br><span class="line">l[i]=read(); r[i]=read();</span><br><span class="line">ans2=<span class="number">1l</span>l*ans2*(r[i]-l[i]+<span class="number">1</span>)%Mod;</span><br><span class="line">addedge(u,v); addedge(v,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) a[i].x=read(),a[i].v=read();</span><br><span class="line">sort(a+<span class="number">1</span>,a+m+<span class="number">1</span>); dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) ans=(ans+f[<span class="number">1</span>][i])%Mod;</span><br><span class="line">ans=<span class="number">1l</span>l*ans*qpow(ans2,Mod<span class="number">-2</span>)%Mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(Mod+<span class="number">1</span>-ans)%Mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;给定一棵 $n$ 个点的无根树，每条边有一堵墙，高度在 $[l_i,r_i]$ 等概率出现。&lt;/p</summary>
      
    
    
    
    <category term="CSP-S模拟赛" scheme="http://example.com/categories/CSP-S%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    
    <category term="树形dp（概率）" scheme="http://example.com/tags/%E6%A0%91%E5%BD%A2dp%EF%BC%88%E6%A6%82%E7%8E%87%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>20200812 模拟赛题解</title>
    <link href="http://example.com/2020/08/12/sol_7/"/>
    <id>http://example.com/2020/08/12/sol_7/</id>
    <published>2020-08-11T16:00:00.000Z</published>
    <updated>2020-09-30T12:09:35.724Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>在一次询问后，“预测答案”，并安排后两次询问。</p><p>预测成功，两次询问有效。预测失败，就浪费了两次询问。</p><p>我们定义一个数列 $a[x]=a[x-1]+a[x-3]+1$（$+1$是等号的情况），$a[1]=0,a[2]=0,a[3]=1$。表示通过这个方法，用 $x$ 次可以询问出值域在 $[1,a[x]]$ 之间的所有数。显然，$3$ 次可以问出一个数。</p><p><img src="0812.png" alt="image"></p><p>在第三步询问时，第一步询问的答案已经出来了。</p><ul><li><p>若答案为 $=$，即为这个数；</p></li><li><p>若答案为 $&gt;$，则后面两次询问浪费，结构和后面的询问没关系。将 $x-=3$，当做一个子问题递归处理； </p></li><li><p>若答案为 $&lt;$，用类似的方法，第四步询问 $a[x-2]$ 的左子区间（长度为 $a[x-3]$）的第 $a[x-4]+1$ 个数，此时得出了第二步的答案，类似的处理即可。</p></li></ul><p>不管怎样，三步询问后，下一次询问的区间长度都为 $a[x-3]$。则总共需要的次数是 $O(x)$级别的。</p><p>又因为 $a[56]&gt;10^9$，所以次数不超过 $56$ 次。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;query.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">510</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">guess</span><span class="params">()</span></span>&#123;</span><br><span class="line">a[<span class="number">3</span>]=<span class="number">1</span>; <span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">4</span>;i&lt;=<span class="number">500</span>;i++)&#123;</span><br><span class="line">a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-3</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (a[i]&gt;=<span class="number">1000000000</span>)&#123; x=i; <span class="keyword">break</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> L=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (query(L+a[max(x<span class="number">-1</span>,<span class="number">0</span>)])==<span class="string">&#x27;=&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (query(L+a[max(x<span class="number">-2</span>,<span class="number">0</span>)])==<span class="string">&#x27;=&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">char</span> ch=query(L+a[max(x<span class="number">-3</span>,<span class="number">0</span>)]);</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;=&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (ch==<span class="string">&#x27;&lt;&#x27;</span>)&#123;</span><br><span class="line">L+=a[max(x<span class="number">-1</span>,<span class="number">0</span>)]+<span class="number">1</span>;</span><br><span class="line">x-=<span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">x--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Xorsum"><a href="#Xorsum" class="headerlink" title="Xorsum"></a>Xorsum</h2><p>有一些显然的条件：和不小于异或和（$s\geq x$），和与异或和奇偶性相同（$2\mid s-x$）。</p><p>最大值最小显然可以二分答案 $mid$，如果我们知道每一位有几个 $1$，就可以贪心地得到答案。每次尽量分给 $&lt;m$ 的数（即没有压上界的），分不下的话剩下的分给前面几位暂时 $=m$ 的数（继续压上界）。</p><p>怎么求呢？先令 $b_i$ 的奇偶性和 $x$ 第 $2^i$ 位的奇偶性一样，然后再加上 $(s-x)/2$ 的这一位的两倍（此处十分巧妙，先从 $s$ 中减去 $x$ 来固定奇偶性，然后将剩下的每位都是 $2$ 的倍数的加上）。</p><p>我们设第 $i$ 位 $1$ 的个数为 $b_i$，我们先求出一个字典序最大的 $b_i$（即先满足 $b_{60}$ 最大，再满足 $b_{59}$ 最大，…）。那么所有可能的 $\{b_i\}$ 即为每次把某个 $u$，$b[u]-=2,b[u-1]+=4$ 就是所有答案（由于奇偶性不能变）。</p><p>直接 $dp$ 模拟这个过程。设 $dp[i][j]$ 表示决定好了从高到低的前 $i$ 位，当前有 $j$ 个数已经小于 $m$，这时候 $b[i-1]$ 加多少倍的 $4$ 。</p><p>那么当前的 $b[i-1]$ 是 $b_0[i-1]+4\times dp[i][j]$（$b_0$ 就是初始时的那个字典序最大的 $\{b_i\}$），令 $u$ 为当前的 $b[i-1]$。</p><p>看 $m$ 的 $2^i$ 位</p><ul><li><p>若为 $0$，就必须把 $u$ 整成不超过 $j$，转移到 $f[i-1][j]$（因为超过 $j$ 的话只能选当前暂时 $=m$，而 $m$ 当前位为 $0$，所以它们当前位不能为 $1$），那么要从当前的 $b$ 减去 $(max(u-j,0)+1)/2\times 2$（必须减去偶数个，$(x+1)/2\times 2$ 即为 $\geq x$ 的最小偶数）。</p></li><li><p>若为 $1$，如果当前的 $u\leq n$，那么新的 $j_new=\max(\min(n-(u-j),n),j)$ 时（先尽量把 $u$ 放在 $j$ 中，那么剩下的 $u-j$ 个必须为 $1$，它们依旧压上界，其它的可以不压上界）。对于其它的 $j’$，先尽量把 $j’$ 放在 $j$ 中，那么剩下的 $j’-j$ 必须为 $1$，而剩下必须要留下 $u\bmod 2$ 个。令 $v=n-(j’-j)$，那么当前留下 $\min(u,(v-u\bmod 2)/2\times 2+u\bmod 2)$。那么当前行都减去 $u-\min(u,(v-u\bmod 2)/2\times 2+u\bmod 2)$，下一行减去 $2\min(u,(v-u\bmod 2)/2\times 2+u\bmod 2)$。</p></li></ul><p>注意到：如果有 $f[i][j]=0$ 且 $j\geq 3$，那么一定有解，因为初始的 $b$ 都不超过 $3$，把这些放到 $j$ 个数中即可；另外一个是我们并不需要用借位一次将 $j$ 增加太多，因为如果借了 $2$，后面就要还 $4$，所以不应该借太多（？）。</p><p>因此我们只需要转移到 $j&lt;5$ 或 $j’-j&lt;2$ 的状态，状态数就是 $O(\log)$ 的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment">Problem:Xor Sum</span></span><br><span class="line"><span class="comment">Source:Easy Contest #2 - by zzq</span></span><br><span class="line"><span class="comment">Author:hydd</span></span><br><span class="line"><span class="comment">Date:2020/8/12</span></span><br><span class="line"><span class="comment">Encoding:UTF-8</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> File(x) freopen(x<span class="meta-string">&quot;.in&quot;</span>,<span class="meta-string">&quot;r&quot;</span>,stdin);freopen(x<span class="meta-string">&quot;.out&quot;</span>,<span class="meta-string">&quot;w&quot;</span>,stdout)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll INF=<span class="number">2e18</span>;</span><br><span class="line">ll n,s,x,t,f[<span class="number">64</span>],g[<span class="number">64</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">chkmin</span><span class="params">(ll &amp;x,ll y)</span></span>&#123; <span class="keyword">if</span> (x&gt;y) x=y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll mid)</span></span>&#123;</span><br><span class="line">t=s-x; <span class="keyword">if</span> (t&lt;<span class="number">0</span>||(t&amp;<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">t/=<span class="number">2</span>; f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (ll j=<span class="number">1</span>;j&lt;<span class="number">64</span>;j++) f[j]=INF;</span><br><span class="line">ll m=min(<span class="number">3l</span>l,n);</span><br><span class="line"><span class="keyword">for</span> (ll i=<span class="number">59</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">for</span> (ll j=<span class="number">0</span>;j&lt;<span class="number">64</span>;j++) g[j]=INF;</span><br><span class="line"><span class="keyword">for</span> (ll j=<span class="number">0</span>;j&lt;=m;j++)&#123;</span><br><span class="line">ll u=f[j]*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span> (x&amp;<span class="number">1l</span>l&lt;&lt;i) u++;<span class="comment">//令b的奇偶性和x那位一样</span></span><br><span class="line"><span class="keyword">if</span> (t&amp;<span class="number">1l</span>l&lt;&lt;i) u+=<span class="number">2</span>;<span class="comment">//然后再加上(s-x)/2的这一位的两倍</span></span><br><span class="line"><span class="keyword">if</span> (mid&amp;(<span class="number">1l</span>l&lt;&lt;i))&#123;</span><br><span class="line"><span class="keyword">if</span> (u&lt;=n)&#123;</span><br><span class="line">ll k=max(min(n-(u-j),n),(ll)j);<span class="comment">//注意一定要开long long，否则可能越界边负数下面判不掉</span></span><br><span class="line"><span class="keyword">if</span> (k&gt;=<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">chkmin(g[k],<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k=j;(k&lt;<span class="number">5</span>||k-j&lt;<span class="number">2</span>)&amp;&amp;k&lt;=n;k++)&#123;</span><br><span class="line">ll v=n-(k-j);<span class="comment">//先尽量把k放在j中，那么剩下的k-j必须为1</span></span><br><span class="line"><span class="keyword">if</span> (v&gt;=u%<span class="number">2</span>)&#123;<span class="comment">//至少要留下u%2个数，e必须为偶数，奇偶性不变</span></span><br><span class="line">ll e=u-min(u,(v-u%<span class="number">2</span>)/<span class="number">2</span>*<span class="number">2</span>+u%<span class="number">2</span>); assert(e%<span class="number">2</span>==<span class="number">0</span>);</span><br><span class="line"><span class="comment">//当前减去e，下一行减去2e，即4(e/2)</span></span><br><span class="line">chkmin(g[k],e/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">ll e=(max(u-j,<span class="number">0l</span>l)+<span class="number">1</span>)/<span class="number">2</span>;<span class="comment">//当前有u个数，而剩下不超过j个数，多余的下传</span></span><br><span class="line"><span class="keyword">if</span> (e*<span class="number">2</span>&gt;u) <span class="keyword">continue</span>;<span class="comment">//当前减去2e，下一行减去4e，即4(e)</span></span><br><span class="line">chkmin(g[j],e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">m++; m=min((ll)m,n);</span><br><span class="line">swap(f,g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)</span><br><span class="line"><span class="keyword">if</span> (!f[i]) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;n,&amp;s,&amp;x);</span><br><span class="line">ll l=<span class="number">0</span>,r=s+<span class="number">1</span>,mid;</span><br><span class="line"><span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (check(mid)) r=mid;</span><br><span class="line"><span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r==s+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">File(<span class="string">&quot;xs&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span> (T--) solve();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">4 8 0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h2><p>首先，将它看成在坐标轴上，每次往右上或右下走一格，不能经过 $y=-1$ 和 $y=m-n+1$，问走到 $(n+m,m-n)$ 的方案数。</p><p>直接容斥翻折即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a,b,tmp1,tmp2,ans;</span><br><span class="line">ll inv[<span class="number">20000005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> x+y&gt;=Mod?x+y-Mod:x+y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> x-y&lt;<span class="number">0</span>?x-y+Mod:x-y;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x&gt;n+m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> inv[x]*inv[n+m-x]%Mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">&quot;path.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">&quot;path.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">inv[<span class="number">1</span>]=<span class="number">1</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">20000000</span>;i++) inv[i]=(Mod-Mod/i)*inv[Mod%i]%Mod;</span><br><span class="line">inv[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20000000</span>;i++) inv[i]=inv[i<span class="number">-1</span>]*inv[i]%Mod;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;m); n--; m--; ans=C(m);</span><br><span class="line">ll mul=<span class="number">1</span>; <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m;i++) mul=mul*i%Mod;</span><br><span class="line">a=m-n; b=m-n;</span><br><span class="line">tmp1=<span class="number">2</span>*(<span class="number">-1</span>); tmp2=<span class="number">2</span>*(m-n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20000000</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">a=tmp1-a;<span class="comment">//关于y=-1对称</span></span><br><span class="line">b=tmp2-b;<span class="comment">//关于y=m-n+1对称 </span></span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">a=tmp2-a;<span class="comment">//关于y=m-n+1对称 </span></span><br><span class="line">b=tmp1-b;<span class="comment">//关于y=-1对称</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans=dec(ans,C((a+n+m)&gt;&gt;<span class="number">1</span>));</span><br><span class="line">ans=dec(ans,C((b+n+m)&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">ans=add(ans,C((a+n+m)&gt;&gt;<span class="number">1</span>));</span><br><span class="line">ans=add(ans,C((b+n+m)&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="number">1l</span>l*ans*mul%Mod);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5000000 10000000</span></span><br><span class="line"><span class="comment">100000 200000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Query&quot;&gt;&lt;a href=&quot;#Query&quot; class=&quot;headerlink&quot; title=&quot;Query&quot;&gt;&lt;/a&gt;Query&lt;/h2&gt;&lt;p&gt;在一次询问后，“预测答案”，并安排后两次询问。&lt;/p&gt;
&lt;p&gt;预测成功，两次询问有效。预测失败，就浪费了两次询问。&lt;</summary>
      
    
    
    
    <category term="NOI模拟赛" scheme="http://example.com/categories/NOI%E6%A8%A1%E6%8B%9F%E8%B5%9B/"/>
    
    
    <category term="zzq" scheme="http://example.com/tags/zzq/"/>
    
  </entry>
  
</feed>
